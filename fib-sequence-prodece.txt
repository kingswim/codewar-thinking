reduce(lambda r,v:r.append(r[-1]+r[-2]) or r , range(100),[0,1])


 it =iter(range(100))
 value = [0,1]
 for i in it:
     value= (lambda r,v:r.append(r[-1]+r[-2]) or r )([0,1],i)


 i=1
     value= (lambda r,v:r.append(r[-1]+r[-2]) or r )([0,1],1)
     value= [0,1,1] or [0,1]=[0,1,1]
 i=2
     value= (lambda r,v:r.append(r[-1]+r[-2]) or r )([0,1,1],2)
     value= [0,1,1,2] or [0,1,1] = [0,1,1,2]



--------------------------------------------------------------------------------------------------------------------------------------------------------------
def fib(n):
    return pow(2 << n, n + 1, (4 << 2*n) - (2 << n) - 1) % (2 << n)

a=(fib(x) for x in range(50) )  a 就是生成器

--------------------------------------------------------------------------------------------------------------------------------------------------------------
from math import sqrt
def F(n):
    return ((1+sqrt(5))**n-(1-sqrt(5))**n)/(2**n*sqrt(5))
